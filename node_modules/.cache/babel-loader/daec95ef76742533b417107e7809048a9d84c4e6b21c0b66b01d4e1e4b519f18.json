{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./Component/Slice/authSlice.js\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nexport const store = configureStore({\n  reducer: {\n    auth: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nconst persistor = persistStore(store);\n\n// import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\n// import userReducer from \"./user/userSlice.js\";\n// import { persistReducer, persistStore } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// const rootReducer = combineReducers({ user: userReducer });\n\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: false\n//     }),\n// });\n\n// export const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","authReducer","persistStore","persistReducer","storage","persistConfig","key","persistedReducer","store","reducer","auth","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["C:/Users/admin/Desktop/Rohin Project/rohin-library/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./Component/Slice/authSlice.js\";\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\n\r\nimport storage from 'redux-persist/lib/storage'; \r\n\r\n\r\n\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth:persistedReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: false\r\n  }),\r\n});\r\n\r\n\r\nconst persistor = persistStore(store);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\n// import userReducer from \"./user/userSlice.js\";\r\n// import { persistReducer, persistStore } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const rootReducer = combineReducers({ user: userReducer });\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = configureStore({\r\n//   reducer: persistedReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: false\r\n//     }),\r\n// });\r\n\r\n// export const persistor = persistStore(store);\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,gCAAgC;AAExD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAG5D,OAAOC,OAAO,MAAM,2BAA2B;AAM/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXF;AACF,CAAC;AAED,MAAMG,gBAAgB,GAAGJ,cAAc,CAACE,aAAa,EAAEJ,WAAW,CAAC;AACnE,OAAO,MAAMO,KAAK,GAAGR,cAAc,CAAC;EAClCS,OAAO,EAAE;IACPC,IAAI,EAACH;EACP,CAAC;EACDI,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACH,CAAC,CAAC;AAGF,MAAMC,SAAS,GAAGZ,YAAY,CAACM,KAAK,CAAC;;AAerC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}