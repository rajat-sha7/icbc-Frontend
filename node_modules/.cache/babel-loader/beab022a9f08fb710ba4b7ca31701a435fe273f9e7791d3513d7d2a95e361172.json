{"ast":null,"code":"import React from'react';import{navigate,useLocation,useNavigate}from'react-router-dom';import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const isLoggedIn=useSelector(state=>state.auth.isLoggedIn);// Replace with your logic to check user authentication state\nconst Navigate=useNavigate();const location=useLocation();if(!isLoggedIn){// Redirect to login if not authenticated\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true,state:{from:location}});}// Render children if authenticated\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","navigate","useLocation","useNavigate","useSelector","jsx","_jsx","ProtectedRoute","_ref","children","isLoggedIn","state","auth","Navigate","location","to","replace","from"],"sources":["C:/Users/admin/Desktop/Rohin Project/rohin-library/src/Component/ProtecteRoute/ProtectedRoute..js"],"sourcesContent":["import React from 'react';\r\nimport { navigate, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n // Replace with your logic to check user authentication state\r\n  const Navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  if (!isLoggedIn) {\r\n    // Redirect to login if not authenticated\r\n    return <Navigate to=\"/login\" replace state={{ from: location }} />;\r\n  }\r\n\r\n  // Render children if authenticated\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACrE,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAAE,UAAU,CAAGN,WAAW,CAAEO,KAAK,EAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC,CACjE;AACC,KAAM,CAAAG,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAW,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,GAAI,CAACQ,UAAU,CAAE,CACf;AACA,mBAAOJ,IAAA,CAACO,QAAQ,EAACE,EAAE,CAAC,QAAQ,CAACC,OAAO,MAACL,KAAK,CAAE,CAAEM,IAAI,CAAEH,QAAS,CAAE,CAAE,CAAC,CACpE,CAEA;AACA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}