{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import authReducer from\"./Component/Slice/authSlice.js\";import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';const persistConfig={key:'root',storage};const persistedReducer=persistReducer(persistConfig,authReducer);export const store=configureStore({reducer:{auth:persistedReducer},middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:false})});const persistor=persistStore(store);// import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\n// import userReducer from \"./user/userSlice.js\";\n// import { persistReducer, persistStore } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// const rootReducer = combineReducers({ user: userReducer });\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// };\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: false\n//     }),\n// });\n// export const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","authReducer","persistStore","persistReducer","storage","persistConfig","key","persistedReducer","store","reducer","auth","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["C:/Users/admin/Desktop/Rohin Project/rohin-library/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./Component/Slice/authSlice.js\";\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\n\r\nimport storage from 'redux-persist/lib/storage'; \r\n\r\n\r\n\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth:persistedReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: false\r\n  }),\r\n});\r\n\r\n\r\nconst persistor = persistStore(store);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\n// import userReducer from \"./user/userSlice.js\";\r\n// import { persistReducer, persistStore } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const rootReducer = combineReducers({ user: userReducer });\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = configureStore({\r\n//   reducer: persistedReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: false\r\n//     }),\r\n// });\r\n\r\n// export const persistor = persistStore(store);\r\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,WAAW,KAAM,gCAAgC,CAExD,OAASC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAG5D,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAM/C,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXF,OACF,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAGJ,cAAc,CAACE,aAAa,CAAEJ,WAAW,CAAC,CACnE,MAAO,MAAM,CAAAO,KAAK,CAAGR,cAAc,CAAC,CAClCS,OAAO,CAAE,CACPC,IAAI,CAACH,gBACP,CAAC,CACDI,UAAU,CAAGC,oBAAoB,EACjCA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,KACrB,CAAC,CACH,CAAC,CAAC,CAGF,KAAM,CAAAC,SAAS,CAAGZ,YAAY,CAACM,KAAK,CAAC,CAerC;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}