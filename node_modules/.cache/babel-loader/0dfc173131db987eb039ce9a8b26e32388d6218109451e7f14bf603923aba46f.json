{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Rohin Project\\\\rohin-library\\\\src\\\\Component\\\\ProtecteRoute\\\\ProtectedRoute..js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  // Replace with your logic to check user authentication state\n  const Navigate = useNavigate();\n  const location = useLocation();\n  if (!isLoggedIn) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true,\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render children if authenticated\n  return children;\n};\n_s(ProtectedRoute, \"lXpIKWK6UFfu3GMKCKDTklkNE90=\", false, function () {\n  return [useSelector, useNavigate, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","navigate","useLocation","useNavigate","useSelector","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isLoggedIn","state","auth","Navigate","location","to","replace","from","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Rohin Project/rohin-library/src/Component/ProtecteRoute/ProtectedRoute..js"],"sourcesContent":["import React from 'react';\r\nimport { navigate, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n // Replace with your logic to check user authentication state\r\n  const Navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  if (!isLoggedIn) {\r\n    // Redirect to login if not authenticated\r\n    return <Navigate to=\"/login\" replace state={{ from: location }} />;\r\n  }\r\n\r\n  // Render children if authenticated\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACrE,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EACjE;EACC,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACQ,UAAU,EAAE;IACf;IACA,oBAAOJ,OAAA,CAACO,QAAQ;MAACE,EAAE,EAAC,QAAQ;MAACC,OAAO;MAACL,KAAK,EAAE;QAAEM,IAAI,EAAEH;MAAS;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,OAAOb,QAAQ;AACjB,CAAC;AAACC,EAAA,CAbIF,cAAc;EAAA,QACCH,WAAW,EAEbD,WAAW,EACXD,WAAW;AAAA;AAAAoB,EAAA,GAJxBf,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}